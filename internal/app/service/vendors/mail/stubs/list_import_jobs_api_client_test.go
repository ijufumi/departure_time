// Code generated by mockery v2.15.0. DO NOT EDIT.

package stubs

import (
	context "context"

	sesv2 "github.com/aws/aws-sdk-go-v2/service/sesv2"
	mock "github.com/stretchr/testify/mock"
)

// ListImportJobsAPIClient is an autogenerated mock type for the ListImportJobsAPIClient type
type ListImportJobsAPIClient struct {
	mock.Mock
}

// ListImportJobs provides a mock function with given fields: _a0, _a1, _a2
func (_m *ListImportJobsAPIClient) ListImportJobs(_a0 context.Context, _a1 *sesv2.ListImportJobsInput, _a2 ...func(*sesv2.Options)) (*sesv2.ListImportJobsOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *sesv2.ListImportJobsOutput
	if rf, ok := ret.Get(0).(func(context.Context, *sesv2.ListImportJobsInput, ...func(*sesv2.Options)) *sesv2.ListImportJobsOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*sesv2.ListImportJobsOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *sesv2.ListImportJobsInput, ...func(*sesv2.Options)) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewListImportJobsAPIClient interface {
	mock.TestingT
	Cleanup(func())
}

// NewListImportJobsAPIClient creates a new instance of ListImportJobsAPIClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewListImportJobsAPIClient(t mockConstructorTestingTNewListImportJobsAPIClient) *ListImportJobsAPIClient {
	mock := &ListImportJobsAPIClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
